{ pkgs, lib, ... }:
let
  inherit (lib.generators) toLua;
in
{
  pipewire = {
    enable = true;
    audio.enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    jack.enable = false;

    # Source: fufexan/nix-gaming
    extraConfig.pipewire = {
      "99-lowlatency" = {
        context = {
          properties.default.clock.min-quantum = 64;
          modules = [
            {
              name = "libpipewire-module-rtkit";
              flags = [
                "ifexists"
                "nofail"
              ];
              args = {
                nice.level = -15;
                rt = {
                  prio = 88;
                  time.soft = 200000;
                  time.hard = 200000;
                };
              };
            }
            {
              name = "libpipewire-module-protocol-pulse";
              args = {
                server.address = [ "unix:native" ];
                pulse.min = {
                  req = "64/48000";
                  quantum = "64/48000";
                  frag = "64/48000";
                };
              };
            }
          ];

          stream.properties = {
            node.latency = "64/48000";
            resample.quality = 1;
          };
        };
      };
    };

    wireplumber = {
      enable = true;
      configPackages =
        let
          # generate "matches" section of the rules
          matches =
            toLua
              {
                multiline = false; # looks better while inline
                indent = false;
              }
              [
                [
                  [
                    "node.name"
                    "matches"
                    "alsa_output.*"
                  ]
                ]
              ]; # nested lists are to produce `{{{ }}}` in the output

          # generate "apply_properties" section of the rules
          apply_properties = toLua { } {
            "audio.format" = "S32LE";
            "audio.rate" = 48000 * 2;
            "api.alsa.period-size" = 2;
          };
        in
        [
          (pkgs.writeTextDir "share/lowlatency.lua.d/99-alsa-lowlatency.lua" ''
            -- Generated by nix-gaming
            alsa_monitor.rules = {
              {
                matches = ${matches};
                apply_properties = ${apply_properties};
              }
            }
          '')
        ];
    };
  };
}
